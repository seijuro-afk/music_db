-- MySQL Script generated by MySQL Workbench
-- Fri Nov 22 19:46:40 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema musiclibrarydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema musiclibrarydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `musiclibrarydb` DEFAULT CHARACTER SET utf8 ;
USE `musiclibrarydb` ;

-- -----------------------------------------------------
-- Table `musiclibrarydb`.`genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `musiclibrarydb`.`genre` (
  `genre_alias` VARCHAR(10) NOT NULL,
  `genre_name` VARCHAR(45) NULL,
  PRIMARY KEY (`genre_alias`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `musiclibrarydb`.`songs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `musiclibrarydb`.`songs` (
  `song_id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(255) NOT NULL,
  `song_duration` TIME NOT NULL,
  `genre` VARCHAR(10) NOT NULL,
  `created_at` TIMESTAMP NOT NULL,
  `song_likes` INT NULL,
  `song_streams` INT DEFAULT 0,
  PRIMARY KEY (`song_id`),
  INDEX `fk_songs_genre1_idx` (`genre` ASC) VISIBLE,
  CONSTRAINT `fk_songs_genre1`
    FOREIGN KEY (`genre`)
    REFERENCES `musiclibrarydb`.`genre` (`genre_alias`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `musiclibrarydb`.`account`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `musiclibrarydb`.`account` (
  `account_id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `created_at` TIMESTAMP NOT NULL,
  PRIMARY KEY (`account_id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `musiclibrarydb`.`artists`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `musiclibrarydb`.`artists` (
  `artist_id` INT NOT NULL AUTO_INCREMENT,
  `account_id` INT NOT NULL,
  `name` VARCHAR(100) NULL,
  `created_at` TIMESTAMP NULL,
  PRIMARY KEY (`artist_id`),
  INDEX `fk_artists_account1_idx` (`account_id` ASC) VISIBLE,
  UNIQUE INDEX `account_id_UNIQUE` (`account_id` ASC) INVISIBLE,
  CONSTRAINT `fk_artists_account1`
    FOREIGN KEY (`account_id`)
    REFERENCES `musiclibrarydb`.`account` (`account_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `musiclibrarydb`.`songsartists`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `musiclibrarydb`.`songsartists` (
  `song_id` INT NOT NULL,
  `artist_id` INT NOT NULL,
  PRIMARY KEY (`song_id`, `artist_id`),
  INDEX `fk_songsartists_artists1_idx` (`artist_id` ASC) VISIBLE,
  CONSTRAINT `fk_songsartists_songs`
    FOREIGN KEY (`song_id`)
    REFERENCES `musiclibrarydb`.`songs` (`song_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_songsartists_artists1`
    FOREIGN KEY (`artist_id`)
    REFERENCES `musiclibrarydb`.`artists` (`artist_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `musiclibrarydb`.`albums`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `musiclibrarydb`.`albums` (
  `album_id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(255) NULL,
  `album_type` VARCHAR(45) NULL,
  `album_duration` TIME NULL,
  `created_at` TIMESTAMP NULL,
  PRIMARY KEY (`album_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `musiclibrarydb`.`albumssongs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `musiclibrarydb`.`albumssongs` (
  `song_id` INT NOT NULL,
  `album_id` INT NOT NULL,
  PRIMARY KEY (`song_id`, `album_id`),
  INDEX `fk_albumssongs_album1_idx` (`album_id` ASC) VISIBLE,
  CONSTRAINT `fk_albumssongs_songs1`
    FOREIGN KEY (`song_id`)
    REFERENCES `musiclibrarydb`.`songs` (`song_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_albumssongs_album1`
    FOREIGN KEY (`album_id`)
    REFERENCES `musiclibrarydb`.`albums` (`album_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `musiclibrarydb`.`albumartist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `musiclibrarydb`.`albumartist` (
  `artist_id` INT NOT NULL,
  `album_id` INT NOT NULL,
  PRIMARY KEY (`artist_id`, `album_id`),
  INDEX `fk_albumartist_album1_idx` (`album_id` ASC) VISIBLE,
  CONSTRAINT `fk_albumartist_artists1`
    FOREIGN KEY (`artist_id`)
    REFERENCES `musiclibrarydb`.`artists` (`artist_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_albumartist_album1`
    FOREIGN KEY (`album_id`)
    REFERENCES `musiclibrarydb`.`albums` (`album_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `musiclibrarydb`.`playlist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `musiclibrarydb`.`playlist` (
  `playlist_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NULL,
  `created_at` TIMESTAMP NULL,
  `account_id` INT NULL,
  PRIMARY KEY (`playlist_id`),
  INDEX `fk_playlist_account1_idx` (`account_id` ASC) VISIBLE,
  CONSTRAINT `fk_playlist_account1`
    FOREIGN KEY (`account_id`)
    REFERENCES `musiclibrarydb`.`account` (`account_id`)
    ON DELETE SET NULL
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `musiclibrarydb`.`playlistssongs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `musiclibrarydb`.`playlistssongs` (
  `playlist_id` INT NOT NULL,
  `song_id` INT NOT NULL,
  PRIMARY KEY (`playlist_id`, `song_id`),
  INDEX `fk_playlistssongs_songs1_idx` (`song_id` ASC) VISIBLE,
  CONSTRAINT `fk_playlistssongs_playlist1`
    FOREIGN KEY (`playlist_id`)
    REFERENCES `musiclibrarydb`.`playlist` (`playlist_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_playlistssongs_songs1`
    FOREIGN KEY (`song_id`)
    REFERENCES `musiclibrarydb`.`songs` (`song_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `musiclibrarydb`.`accountlikessong`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `musiclibrarydb`.`accountlikessong` (
  `account_id` INT NOT NULL,
  `song_id` INT NOT NULL,
  PRIMARY KEY (`account_id`, `song_id`),
  INDEX `fk_accountlikessong_songs1_idx` (`song_id` ASC) VISIBLE,
  CONSTRAINT `fk_accountlikessong_account1`
    FOREIGN KEY (`account_id`)
    REFERENCES `musiclibrarydb`.`account` (`account_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_accountlikessong_songs1`
    FOREIGN KEY (`song_id`)
    REFERENCES `musiclibrarydb`.`songs` (`song_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `musiclibrarydb`.`songhistory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `musiclibrarydb`.`songhistory` (
  `account_id` INT NOT NULL,
  `song_id` INT NOT NULL,
  `date_played` TIMESTAMP NOT NULL,
  PRIMARY KEY (`account_id`, `song_id`),
  INDEX `fk_songhistory_songs1_idx` (`song_id` ASC) VISIBLE,
  CONSTRAINT `fk_songhistory_account1`
    FOREIGN KEY (`account_id`)
    REFERENCES `musiclibrarydb`.`account` (`account_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_songhistory_songs1`
    FOREIGN KEY (`song_id`)
    REFERENCES `musiclibrarydb`.`songs` (`song_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
